package KieRule;
import vg.model.*;



rule "Set Lethal force limits"

when
	$limiter : ResponseLimiters(lethalForceMinimum == null)
	Double($minimum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.LETHAL_FORCE , $m : escalation),
	min($m)
	)
then
	modify($limiter){setLethalForceMinimum($minimum)};
end;

rule "Set Less lethal methods limits"

when
	$limiter : ResponseLimiters(lessLethalMinimum == null && lessLethalMaximum== null)
	Double($minimum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.LESS_LETHAL_METHODS , $m : escalation),
	min($m)
	)
	Double($maximum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.LESS_LETHAL_METHODS , $m : escalation),
	max($m)
	)
then
	modify($limiter){setLessLethalMinimum($minimum), setLessLethalMaximum($maximum)};
end;

rule "Set Empty Hand control limits"

when
	$limiter : ResponseLimiters(emptyHandMinimum == null && emptyHandMaximum == null)
	Double($minimum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.EMPTY_HAND_CONTROL , $m : escalation),
	min($m)
	)
	Double($maximum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.EMPTY_HAND_CONTROL , $m : escalation),
	max($m)
	)
then
	modify($limiter){setEmptyHandMinimum($minimum), setEmptyHandMaximum($maximum)};
end;


rule "Set Verbalization limits"

when
	$limiter : ResponseLimiters(verbalizationMinimum== null && verbalizationMaximum == null)
	Double($minimum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.VERBALIZATION , $m : escalation),
	min($m)
	)
	Double($maximum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.VERBALIZATION , $m : escalation),
	max($m)
	)
then
	modify($limiter){setVerbalizationMinimum($minimum), setVerbalizationMaximum($maximum)};
end;

rule "Set Presence limits"

when
	$limiter : ResponseLimiters(presenceMaximum == null)
	Double($maximum : doubleValue) from accumulate(
	PastIncident(responseUsed == PoliceResponseType.PRESENCE , $m : escalation),
	max($m)
	)
then
	modify($limiter){setPresenceMaximum($maximum)};
end;


rule "Response worked"

when
	$incidentObject : Incident(responseWorked == true, $pf:allreadyUsedPoliceResponse);
then
	modify($incidentObject){setResponse($pf)};
end;

rule "Threat for life safety"

when
	$incidentObject : Incident(suspectThreatIntention == true && (weapon== WeaponType.SHARP || weapon==WeaponType.FIREARM) && responseWorked == false);
then
	modify($incidentObject){setSuspectThreatForLife(true)};
end;

rule "Lethal force MUST"

when
	$incidentObject : Incident(suspectThreatForLife == true);
then
	modify($incidentObject){setResponse(PoliceResponseType.LETHAL_FORCE)};
end;

rule "Does not cooperate"

when 
	$incidentObject : Incident(allreadyUsedPoliceResponse == PoliceResponseType.VERBALIZATION && responseWorked == false);
then 
	modify($incidentObject){setCooperates(false)};
end;

rule "Threat for safety"

when
	$incidentObject : Incident( cooperates == false && suspectThreatIntention == true);
then 
	modify($incidentObject){setSuspectThreatForSafety(true)};
end;

rule "Less leathal MUST"

when
	$incidentObject : Incident(suspectThreatForSafety == true  && (weapon ==  WeaponType.BLUNT || weapon == WeaponType.NONE));
then
	modify($incidentObject){setResponse(PoliceResponseType.LESS_LETHAL_METHODS)};
end;

rule "Calculate escalation"

when 
	$incidentObject : Incident(response==null);
then
	modify($incidentObject){setEscalation(
	3*$incidentObject.getCriminals()*$incidentObject.getWeapon().coef/$incidentObject.getCops() + $incidentObject.getAllreadyUsedPoliceResponse().limit)};

end;

rule "Calculate escalation for Verbalization"
when 
	$limiter : ResponseLimiters($min : verbalizationMinimum, $max : verbalizationMaximum)
	$incidentObject : Incident(escalation != null && escalation>=$min && escalation<$max)
then
	modify($incidentObject){setResponse(PoliceResponseType.VERBALIZATION)};
end;

rule "Calculate escalation to Empty Hand Control"
when 
	$limiter : ResponseLimiters($min : emptyHandMinimum, $max : emptyHandMaximum)
	$incidentObject : Incident(escalation != null && escalation>=$min && escalation<$max)
then
	modify($incidentObject){setResponse(PoliceResponseType.EMPTY_HAND_CONTROL)};
end;

rule "Calculate escalation to Less Lethal methods Control"
when 
	$limiter : ResponseLimiters($min : lessLethalMinimum, $max : lessLethalMaximum)
	$incidentObject : Incident(escalation != null && escalation>=$min && escalation<$max)
then
	modify($incidentObject){setResponse(PoliceResponseType.LESS_LETHAL_METHODS)};
end;

rule "Calculate escalation to Lethal Force"
when 
	$limiter : ResponseLimiters($min : lethalForceMinimum)
	$incidentObject : Incident(escalation != null && escalation>=$min);
then
	modify($incidentObject){setResponse(PoliceResponseType.LETHAL_FORCE)};

end;

rule "Calculate escalation for Presence"
when 
	$limiter : ResponseLimiters($max : presenceMaximum)
	$incidentObject : Incident(escalation != null && escalation<$max);
then
	modify($incidentObject){setResponse(PoliceResponseType.PRESENCE)};

end;



